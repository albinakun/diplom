#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, Режим)
	
	СформироватьДвижения();
	РассчитатьДополнительныеНачисления();
	РасчитатьНДФЛ();
	ВзаиморасчетыССотрудниками();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьДвижения()
		
	Для Каждого Строка Из Начисления Цикл
		Движение = Движения.ВКМ_ДополнительныеНачисления.Добавить();
		Движение.ПериодРегистрации = Дата;
		Движение.ВидРасчета = Строка.ВидРасчета;
		Движение.Сотрудник = Строка.Сотрудник;
		Движение.Подразделение = Строка.Подразделение;
		
		Движение = Движения.ВКМ_Удержания.Добавить();
		Движение.ПериодРегистрации = Дата;
		Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
		Движение.БазовыйПериодКонец = КонецМесяца(Дата);
		Движение.ВидРасчета = Строка.Удержание;
		Движение.Сотрудник = Строка.Сотрудник;
		Движение.Подразделение = Строка.Подразделение;
		
	КонецЦикла;
	
	Движения.ВКМ_ДополнительныеНачисления.Записать();
	Движения.ВКМ_Удержания.Записать();

КонецПроцедуры

Процедура РассчитатьДополнительныеНачисления()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
	|	ВКМ_ДополнительныеНачисления.Сотрудник КАК Сотрудник,
	|	ВКМ_ДополнительныеНачисления.Подразделение КАК Подразделение,
	|	ВКМ_ОсновныеНачисления.Результат КАК Начислено
	|ПОМЕСТИТЬ ВТ_ДанныеОНачислении
	|ИЗ
	|	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	|		ПО ВКМ_ДополнительныеНачисления.Сотрудник = ВКМ_ОсновныеНачисления.Сотрудник
	|ГДЕ
	|	ВКМ_ДополнительныеНачисления.Регистратор = &Ссылка
	|	И ВКМ_ДополнительныеНачисления.ВидРасчета = &ВидРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеОНачислении.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник, 0) КАК Сотрудник,
	|	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот, 0) КАК ПроцентОтРабот,
	|	ВТ_ДанныеОНачислении.Начислено КАК Начислено,
	|	ВТ_ДанныеОНачислении.Подразделение КАК Подразделение,
	|	ВКМ_ФиксированнаяПремия.Значение КАК Премия
	|ИЗ
	|	ВТ_ДанныеОНачислении КАК ВТ_ДанныеОНачислении
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&МоментВремени,) КАК
	|			ВКМ_УсловияОплатыСотрудниковСрезПоследних
	|		ПО ВТ_ДанныеОНачислении.Сотрудник = ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник,
	|	Константа.ВКМ_ФиксированнаяПремия КАК ВКМ_ФиксированнаяПремия";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.Премия);
		
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если ЗначениеЗаполнено(Выборка.ПроцентОтРабот) Тогда
			Движение = Движения.ВКМ_ДополнительныеНачисления[Выборка.НомерСтроки - 1];
			Премия = Выборка.Начислено * Выборка.ПроцентОтРабот / 100;
			Движение.Результат = Премия;
			Движение.Размер = Выборка.ПроцентОтРабот;			
		Иначе
			Движение = Движения.ВКМ_ДополнительныеНачисления[Выборка.НомерСтроки - 1];
			Премия = Выборка.Премия;
			Движение.Результат = Премия;
				
		КонецЕсли;
	КонецЦикла;
		
	Движения.ВКМ_ДополнительныеНачисления.Записать();
	
КонецПроцедуры

Процедура РасчитатьНДФЛ()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.РезультатБаза, 0) КАК РезультатБаза
	|ИЗ
	|	РегистрРасчета.ВКМ_Удержания.БазаВКМ_ДополнительныеНачисления(&Измерения, &Измерения,, Регистратор = &Ссылка) КАК
	|		ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
 	
 	Измерения = Новый Массив;
 	Измерения.Добавить("Сотрудник");
 	Измерения.Добавить("Подразделение");
 	Запрос.УстановитьПараметр("Измерения", Измерения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
	
		Движение = Движения.ВКМ_Удержания[Выборка.НомерСтроки - 1];
		Удержано = Выборка.РезультатБаза * 13 / 100;
		Движение.Результат = Удержано;
				
	КонецЦикла;
	
	Движения.ВКМ_Удержания.Записать(, Истина);
	
КонецПроцедуры

Процедура ВзаиморасчетыССотрудниками()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ДополнительныеНачисления.Сотрудник,
	|	ВКМ_ДополнительныеНачисления.Результат - ВКМ_Удержания.Результат КАК Результат
	|ИЗ
	|	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
	|		ПО ВКМ_ДополнительныеНачисления.НомерСтроки = ВКМ_Удержания.НомерСтроки
	|ГДЕ
	|	ВКМ_ДополнительныеНачисления.Регистратор = &Ссылка
	|	И ВКМ_Удержания.Регистратор = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.Сумма = Выборка.Результат;
			
	КонецЦикла;
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();
	
КонецПроцедуры


#КонецОбласти

#КонецЕсли